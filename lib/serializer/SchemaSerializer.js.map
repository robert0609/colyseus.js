{"version":3,"file":"SchemaSerializer.js","sourceRoot":"","sources":["../../src/serializer/SchemaSerializer.ts"],"names":[],"mappings":";;;AAMA,8CAQC;AAbD,6CAAmG;AAKnG,SAAgB,iBAAiB,CAAmB,IAAa;IAC7D,IAAI,CAAC;QACD,mBAAmB;QACnB,OAAO,IAAA,iCAAwB,EAAE,IAAI,CAAC,YAAY,CAAoC,CAAC,OAAO,CAAC,CAAC;IACpG,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACT,iBAAiB;QACjB,OAAO,SAAS,CAAC;IACrB,CAAC;AACL,CAAC;AAED,MAAa,gBAAgB;IAIzB,QAAQ,CAAC,YAAoB,EAAE,EAAa;QACxC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,OAAe,EAAE,EAAa;QAChC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;IAClC,CAAC;IAED,SAAS,CAAC,KAAa,EAAE,EAAa;QAClC,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,EAAE;YACF,mEAAmE;YACnE,EAAE;YACF,mBAAU,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ;YAEtC,IAAI,CAAC,OAAO,GAAG,IAAI,gBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE3C,CAAC;aAAM,CAAC;YACJ,yCAAyC;YACzC,IAAI,CAAC,OAAO,GAAG,mBAAU,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC5C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QACpC,CAAC;IACL,CAAC;CACJ;AAnCD,4CAmCC","sourcesContent":["import { Serializer } from \"./Serializer\";\r\nimport { Schema, Decoder, Reflection, Iterator, getDecoderStateCallbacks } from \"@colyseus/schema\";\r\nimport type { Room } from \"../Room\";\r\n\r\nexport type SchemaConstructor<T = Schema> = new (...args: any[]) => T;\r\n\r\nexport function getStateCallbacks<T extends Schema>(room: Room<T>) {\r\n    try {\r\n        // SchemaSerializer\r\n        return getDecoderStateCallbacks((room['serializer'] as unknown as SchemaSerializer<T>).decoder);\r\n    } catch (e) {\r\n        // NoneSerializer\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport class SchemaSerializer<T extends Schema = any> implements Serializer<T> {\r\n    state: T;\r\n    decoder: Decoder<T>;\r\n\r\n    setState(encodedState: Buffer, it?: Iterator) {\r\n        this.decoder.decode(encodedState, it);\r\n    }\r\n\r\n    getState() {\r\n        return this.state;\r\n    }\r\n\r\n    patch(patches: Buffer, it?: Iterator) {\r\n        return this.decoder.decode(patches, it);\r\n    }\r\n\r\n    teardown() {\r\n        this.decoder.root.clearRefs();\r\n    }\r\n\r\n    handshake(bytes: Buffer, it?: Iterator) {\r\n        if (this.state) {\r\n            //\r\n            // TODO: validate definitions against concreate this.state instance\r\n            //\r\n            Reflection.decode(bytes, it); // no-op\r\n\r\n            this.decoder = new Decoder(this.state);\r\n\r\n        } else {\r\n            // initialize reflected state from server\r\n            this.decoder = Reflection.decode(bytes, it);\r\n            this.state = this.decoder.state;\r\n        }\r\n    }\r\n}\r\n"]}