{"version":3,"file":"Auth.js","sourceRoot":"","sources":["../src/Auth.ts"],"names":[],"mappings":"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","sourcesContent":["import { HTTP } from \"./HTTP\";\r\nimport { getItem, removeItem, setItem } from \"./Storage\";\r\nimport { createNanoEvents } from './core/nanoevents';\r\n\r\nexport interface AuthSettings {\r\n    path: string;\r\n    key: string;\r\n}\r\n\r\nexport interface PopupSettings {\r\n    prefix: string;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nexport interface AuthData {\r\n    user: any;\r\n    token: string;\r\n}\r\n\r\nexport class Auth {\r\n    settings: AuthSettings = {\r\n        path: \"/auth\",\r\n        key: \"colyseus-auth-token\",\r\n    };\r\n\r\n    #_initialized = false;\r\n    #_initializationPromise: Promise<void>;\r\n    #_signInWindow = undefined;\r\n    #_events = createNanoEvents();\r\n\r\n    constructor(protected http: HTTP) {\r\n        getItem(this.settings.key, (token) => this.token = token);\r\n    }\r\n\r\n    public set token(token: string) {\r\n        this.http.authToken = token;\r\n    }\r\n\r\n    public get token(): string {\r\n        return this.http.authToken;\r\n    }\r\n\r\n    public onChange(callback: (response: AuthData) => void) {\r\n        const unbindChange = this.#_events.on(\"change\", callback);\r\n        if (!this.#_initialized) {\r\n            this.#_initializationPromise = new Promise<void>((resolve, reject) => {\r\n                this.getUserData().then((userData) => {\r\n                    this.emitChange({ ...userData, token: this.token });\r\n\r\n                }).catch((e) => {\r\n                    // user is not logged in, or service is down\r\n                    this.emitChange({ user: null, token: undefined });\r\n\r\n                }).finally(() => {\r\n                    resolve();\r\n                });\r\n            });\r\n        }\r\n        this.#_initialized = true;\r\n        return unbindChange;\r\n    }\r\n\r\n    public async getUserData() {\r\n        if (this.token) {\r\n            return (await this.http.get(`${this.settings.path}/userdata`)).data;\r\n        } else {\r\n            throw new Error(\"missing auth.token\");\r\n        }\r\n    }\r\n\r\n    public async registerWithEmailAndPassword(email: string, password: string, options?: any) {\r\n        const data = (await this.http.post(`${this.settings.path}/register`, {\r\n            body: { email, password, options, },\r\n        })).data;\r\n\r\n        this.emitChange(data);\r\n\r\n        return data;\r\n    }\r\n\r\n    public async signInWithEmailAndPassword(email: string, password: string) {\r\n        const data = (await this.http.post(`${this.settings.path}/login`, {\r\n            body: { email, password, },\r\n        })).data;\r\n\r\n        this.emitChange(data);\r\n\r\n        return data;\r\n    }\r\n\r\n    public async signInAnonymously(options?: any) {\r\n        const data = (await this.http.post(`${this.settings.path}/anonymous`, {\r\n            body: { options, }\r\n        })).data;\r\n\r\n        this.emitChange(data);\r\n\r\n        return data;\r\n    }\r\n\r\n    public async sendPasswordResetEmail(email: string) {\r\n        return (await this.http.post(`${this.settings.path}/forgot-password`, {\r\n            body: { email, }\r\n        })).data;\r\n    }\r\n\r\n    public async signInWithProvider(providerName: string, settings: Partial<PopupSettings> = {}) {\r\n        return new Promise((resolve, reject) => {\r\n            const w = settings.width || 480;\r\n            const h = settings.height || 768;\r\n\r\n            // forward existing token for upgrading\r\n            const upgradingToken = this.token ? `?token=${this.token}` : \"\";\r\n\r\n            // Capitalize first letter of providerName\r\n            const title = `Login with ${(providerName[0].toUpperCase() + providerName.substring(1))}`;\r\n            const url = this.http['client']['getHttpEndpoint'](`${(settings.prefix || `${this.settings.path}/provider`)}/${providerName}${upgradingToken}`);\r\n\r\n            const left = (screen.width / 2) - (w / 2);\r\n            const top = (screen.height / 2) - (h / 2);\r\n\r\n            this.#_signInWindow = window.open(url, title, 'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);\r\n\r\n            const onMessage = (event: MessageEvent) => {\r\n                // TODO: it is a good idea to check if event.origin can be trusted!\r\n                // if (event.origin.indexOf(window.location.hostname) === -1) { return; }\r\n\r\n                // require 'user' and 'token' inside received data.\r\n                if (event.data.user === undefined && event.data.token === undefined) { return; }\r\n\r\n                clearInterval(rejectionChecker);\r\n                this.#_signInWindow.close();\r\n                this.#_signInWindow = undefined;\r\n\r\n                window.removeEventListener(\"message\", onMessage);\r\n\r\n                if (event.data.error !== undefined) {\r\n                    reject(event.data.error);\r\n\r\n                } else {\r\n                    resolve(event.data);\r\n                    this.emitChange(event.data);\r\n                }\r\n            }\r\n\r\n            const rejectionChecker = setInterval(() => {\r\n                if (!this.#_signInWindow || this.#_signInWindow.closed) {\r\n                    this.#_signInWindow = undefined;\r\n                    reject(\"cancelled\");\r\n                    window.removeEventListener(\"message\", onMessage);\r\n                }\r\n            }, 200);\r\n\r\n            window.addEventListener(\"message\", onMessage);\r\n        });\r\n    }\r\n\r\n    public async signOut() {\r\n        this.emitChange({ user: null, token: null });\r\n    }\r\n\r\n    private emitChange(authData: Partial<AuthData>) {\r\n        if (authData.token !== undefined) {\r\n            this.token = authData.token;\r\n\r\n            if (authData.token === null) {\r\n                removeItem(this.settings.key);\r\n\r\n            } else {\r\n                // store key in localStorage\r\n                setItem(this.settings.key, authData.token);\r\n            }\r\n        }\r\n\r\n        this.#_events.emit(\"change\", authData);\r\n    }\r\n\r\n}\r\n"]}